# Use this file to configure the Overcommit hooks you wish to use. This will
# extend the default configuration defined in:
# https://github.com/brigade/overcommit/blob/master/config/default.yml
#
# At the topmost level of this YAML file is a key representing type of hook
# being run (e.g. pre-commit, commit-msg, etc.). Within each type you can
# customize each hook, such as whether to only run it on certain files (via
# `include`), whether to only display output if it fails (via `quiet`), etc.
#
# For a complete list of hooks, see:
# https://github.com/brigade/overcommit/tree/master/lib/overcommit/hook
#
# For a complete list of options that you can use to customize hooks, see:
# https://github.com/brigade/overcommit#configuration

CommitMsg:
  ALL:
    requires_files: false
    quiet: false

  EmptyMessage:
    enabled: true
    required: true
    description: 'Checking for empty commit message'

  CapitalizedSubject:
    enabled: true
    required: true
    description: 'Checking subject capitalization'

  CommitMsgPattern:
    enabled: true
    required: true
    description: 'Checking commit pattern matching'

PreCommit:
  ALL:
    problem_on_unmodified_line: report
    requires_files: true
    required: false
    quiet: false

  AuthorEmail:
    enabled: true
    description: 'Checking author email'
    requires_files: false
    required: true
    quiet: true
    pattern: '^.*@astoundcommerce\.com$'

  AuthorName:
    enabled: true
    description: 'Checking for author name'
    requires_files: false
    required: true
    quiet: true

  ScssLint:
    enabled: true
    required: true
    description: 'Analyzing with scss-lint'
    required_executable: 'scss-lint'
    install_command: 'gem install scss-lint'
    include: './css/**/*.scss'

  CssLint:
    enabled: true
    required: true
    description: 'Analyzing with csslint'
    required_executable: 'csslint'
    flags: ['--format=compact']
    install_command: 'npm install -g csslint'
    include: './css**/*.css'

  ImageOptim:
    enabled: true
    description: 'Checking for optimizable images'
    required_executable: 'image_optim'
    install_command: 'gem install image_optim'
    include:
      - '**/*.gif'
      - '**/*.jpeg'
      - '**/*.jpg'
      - '**/*.png'
      - '**/*.svg'

  JsLint:
    enabled: true
    description: 'Analyzing with JSLint'
    required_executable: 'jslint'
    flags: ['--terse']
    install_command: 'npm install -g jslint'
    include: './js/**/*.js'

PrePush:
  ALL:
    requires_files: false
    required: false
    quiet: false

  ProtectedBranches:
    enabled: true
    description: 'Checking for illegal pushes to protected branches'
    branches: ['master']